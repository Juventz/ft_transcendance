# logstash take input from other container such as postgres, nginx and django
# and output to elasticsearch
input {
  # udp {
  #   port => 514
  #   codec => json
  # }
  syslog {
      port => 514
      syslog_field => "message"
      codec => plain {
          charset => "UTF-8"
      }
      tags => ["nginx"]
  }
  syslog {
        port => 515
        syslog_field => "message"
        codec => plain {
            charset => "UTF-8"
        }
        tags => ["django"]
  }
}

filter {
    if "nginx" in [tags] {

        grok {
            match => {
                "message" => '%{IPORHOST:remote_addr} - %{DATA:remote_user} \[%{HTTPDATE:time_local}\] "%{WORD:method} %{DATA:request} HTTP/%{NUMBER:http_version}" %{NUMBER:status} %{NUMBER:body_bytes_sent} "%{DATA:http_referer}" "%{DATA:http_user_agent}" "%{DATA:http_x_forwarded_for}"'
            }
            remove_field => ["message"]
        }

        date {
            match => [ "time_local", "dd/MMM/YYYY:HH:mm:ss Z" ]
            target => "@timestamp"
            remove_field => [ "time_local" ]
        }
    }

  if "django" in [tags] {
    grok {
        match => { "message" => "<%{NUMBER:syslog_pri}>django: %{GREEDYDATA:syslog_message}" }
    }
        mutate {
            add_field => { "program" => "django" }
        }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "@timestamp"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{program}-logs-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}